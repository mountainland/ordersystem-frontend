# Generated by Django 3.2.16 on 2022-11-03 11:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Payment', '0001_initial'),
        ('City', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('delivery', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=200)),
                ('price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ('category', '-created'),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=10)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(max_length=255)),
                ('postcode', models.CharField(max_length=5)),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('cost', models.IntegerField(default=0)),
                ('information', models.CharField(blank=True, max_length=500, null=True)),
                ('delivered', models.BooleanField(default=False)),
                ('delivered_on', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Product.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='City.city')),
                ('order_by', django_currentuser.db.models.fields.CurrentUserField(blank=True, default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders_user', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Payment.payment_method')),
                ('product_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order.product_1+', to='Product.product')),
                ('product_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order.product_2+', to='Product.product')),
                ('product_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Order.product_3+', to='Product.product')),
            ],
            options={
                'ordering': ('delivered', '-created'),
            },
        ),
    ]
